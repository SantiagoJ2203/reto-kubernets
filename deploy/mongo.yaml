apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: mongo
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongo
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/chat-socket-challenge-main-angular-chat-net: "true"
        io.kompose.service: mongo
    spec:
      containers:
        - env:
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: devpassword
            - name: MONGO_INITDB_ROOT_USERNAME
              value: devuser
            - name: TZ
              value: America/Bogota
          image: mongo:4.4
          livenessProbe:
            exec:
              command:
                - echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
            failureThreshold: 5
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 10
          name: mongo
          ports:
            - containerPort: 27017
              hostPort: 27017
              protocol: TCP
          volumeMounts:
            - mountPath: /data/db
              name: mongo-claim0
      hostname: mongo
      restartPolicy: Always
      volumes:
        - name: mongo-claim0
          persistentVolumeClaim:
            claimName: mongo-claim0

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: mongo
  name: mongo
spec:
  ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
  selector:
    io.kompose.service: mongo    
    action: ALLOW